steps:
  - id: cert-manager
    name: gcr.io/cloud-builders/kubectl
    entrypoint: sh
    args:
      - -c
      - |      
        CLOUDSDK_COMPUTE_REGION=asia-northeast1
        CLOUDSDK_CONTAINER_CLUSTER=challenges
        alias kubectl=/builder/kubectl.bash

        kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.4/cert-manager.yaml

        gcloud iam service-accounts keys create cert-manager-key.json \
          --iam-account cert-manager@$PROJECT_ID.iam.gserviceaccount.com

        kubectl create secret generic cert-manager-sa-key \
          --from-file=cert-manager-key.json=./cert-manager-key.json \
          --namespace=cert-manager

        sed -i "s/\$$PROJECT_ID/$PROJECT_ID/g" ./cert-manager/issuer.yaml
        kubectl apply -f ./cert-manager/issuer.yaml

        DOMAIN_BASE=$(gcloud dns managed-zones describe default --format 'value(dnsName)' | sed 's/\.$//')
        sed -i "s/\$$DOMAIN_BASE/$DOMAIN_BASE/g" ./cert-manager/certificate.yaml
        kubectl apply -f ./cert-manager/certificate.yaml        

  - id: hello-app
    name: gcr.io/cloud-builders/kubectl
    entrypoint: sh
    args:
      - -c
      - |      
        CLOUDSDK_COMPUTE_REGION=asia-northeast1
        CLOUDSDK_CONTAINER_CLUSTER=challenges
        alias kubectl=/builder/kubectl.bash

        kubectl apply -f ./hello-app/deployment.yaml
        kubectl apply -f ./hello-app/service.yaml

  - id: ingress
    name: gcr.io/cloud-builders/kubectl
    entrypoint: sh
    args:
      - -c
      - |      
        CLOUDSDK_COMPUTE_REGION=asia-northeast1
        CLOUDSDK_CONTAINER_CLUSTER=challenges
        alias kubectl=/builder/kubectl.bash
        
        kubectl apply -f ./ingress/ingress.yaml